name: Create demo GIF

on:
  workflow_dispatch:
    inputs:
      fps:
        description: Frames per second (lower = slower)
        required: false
  default: '3'
  push:
    branches: [ main ]
    paths:
      - 'screenshot-*.png'
      - '.github/workflows/create-demo-gif.yml'

permissions:
  contents: write

jobs:
  build-gif:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick

      - name: Prepare frames
        id: prep
        run: |
          mkdir -p docs
          # Curate a subset of screenshots for the demo order
          frames=(
            screenshot-2.png  # Login
            screenshot-5.png  # Private page
            screenshot-6.png  # Dashboard
            screenshot-8.png  # Users report
            screenshot-10.png # Grid
            screenshot-12.png # Subgrid
            screenshot-15.png # Grid edit with thumbnail
            screenshot-16.png # Grid edit with image
            screenshot-17.png # Thumbnails grid
          )
          # Filter only those that exist
          use_frames=()
          for f in "${frames[@]}"; do
            if [ -f "$f" ]; then use_frames+=("$f"); fi
          done
          if [ ${#use_frames[@]} -eq 0 ]; then
            echo "No frames found; exiting early." && exit 0
          fi
          printf '%s\n' "${use_frames[@]}" > frames.txt

      - name: Build GIF
        if: success()
        run: |
          if [ -f frames.txt ]; then
            # fps to delay mapping: delay in ImageMagick is in 1/100s per frame
            FPS=${{ github.event.inputs.fps || '3' }}
            if ! echo "$FPS" | grep -Eq '^[0-9]+$'; then FPS=3; fi
            # Calculate delay (in centiseconds). Example: fps=3 => delay=33
            DELAY=$(( 100 / (FPS>0?FPS:3) ))
            # Create an optimized GIF
            convert \
              -dispose previous \
              -delay "$DELAY" \
              -loop 0 \
              -resize 1200x \
              @frames.txt \
              -layers Optimize docs/demo.gif
          fi

      - name: Commit GIF
        if: success() && hashFiles('docs/demo.gif') != ''
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/demo.gif
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(docs): add/update demo.gif (auto-generated)"
          git push
